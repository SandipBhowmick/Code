SELECT TOP 3 City FROM Customers WHERE Country='Germany';

SELECT * FROM downloads where user_id='13' limit 3;

SELECT MIN(Price) AS SmallestPrice FROM Products;

SELECT AVG(column_name) FROM table_name WHERE condition; --SUM() COUNT()

LIKE operator
% - represents zero, one, or multiple characters
_ - represents a single character

WHERE CustomerName LIKE 'a_%_%'  -(Finds any values that starts with "a" and are at least 3 characters in length)



SELECT * from downloads WHERE title NOT LIKE 'c_%';


select * from downloads where id between 80 and 90;   --Select between reng

select * from downloads where id not between 80 and 90;

SELECT * FROM Products WHERE (Price BETWEEN 10 AND 20) AND NOT CategoryID IN (1,2,3);


SELECT * FROM Products WHERE ProductName BETWEEN 'Carnarvon Tigers' AND 'Mozzarella di Giovanni' ORDER BY ProductName;


select id as "User ID", title as "Name" from downloads;

select a.id,a.title,b.id,b.coupon_code from downloads as a, coupons as b ;

select a.id,a.title,b.id,b.coupon_code from downloads as a, coupons as b where b.id = 3;

select downloads.title,users.email from downloads INNER JOIN users on downloads.user_id = users.id;

select downloads.title,users.email from downloads INNER JOIN users on downloads.user_id = users.id order by downloads.title desc;

Self Join
select a.CustomerName as [Customer Name], a.City as [Customer City] from Customers a, Customers b where a.CustomerID<>b.CustomerID and a.City= b.City order by a.City;


****GROUP BY use with aggregation function

The following SQL statement lists the number of customers in each country, sorted high to low:

SELECT COUNT(CustomerID), Country FROM Customers GROUP BY Country ORDER BY COUNT(CustomerID) DESC;


*******The HAVING clause was added to SQL because the WHERE keyword could not be used with aggregate functions.
******* After GROUP BY WHERE is not permitted




